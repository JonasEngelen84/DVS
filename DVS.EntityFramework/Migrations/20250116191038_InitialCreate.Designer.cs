// <auto-generated />
using System;
using DVS.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DVS.EntityFramework.Migrations
{
    [DbContext(typeof(DVSDbContext))]
    [Migration("20250116191038_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("DVS.Domain.Models.Category", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            GuidId = new Guid("0d653157-7994-4bfc-890e-dba17c56a613"),
                            Name = "-Kategorielos-"
                        },
                        new
                        {
                            GuidId = new Guid("9a7e877d-a06a-4da8-a534-36788daa96b4"),
                            Name = "Handschuhe"
                        },
                        new
                        {
                            GuidId = new Guid("5ed6e56c-a5ec-47f7-8f2c-7fad3ba0f43f"),
                            Name = "Hemd"
                        },
                        new
                        {
                            GuidId = new Guid("d381d2ab-670a-46c9-b3d4-d276d1047bf3"),
                            Name = "Hose"
                        },
                        new
                        {
                            GuidId = new Guid("024a8684-918f-400a-96da-b59c8d4dfaa9"),
                            Name = "Jacke"
                        },
                        new
                        {
                            GuidId = new Guid("43d35db8-7a03-48cd-95ef-cd69ffbf19aa"),
                            Name = "Kopfbedeckung"
                        },
                        new
                        {
                            GuidId = new Guid("7f61a8a4-9b00-448c-8e2c-064441103f53"),
                            Name = "Pullover"
                        },
                        new
                        {
                            GuidId = new Guid("e986c8e7-e2a5-492a-88a9-5db713ccb212"),
                            Name = "Schuhwerk"
                        },
                        new
                        {
                            GuidId = new Guid("8cf80357-d4c6-49b2-8c38-6bd7a34ce607"),
                            Name = "Shirt"
                        });
                });

            modelBuilder.Entity("DVS.Domain.Models.Clothes", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryGuidId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SeasonGuidId")
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.HasIndex("CategoryGuidId");

                    b.HasIndex("SeasonGuidId");

                    b.ToTable("Clothes");
                });

            modelBuilder.Entity("DVS.Domain.Models.ClothesSize", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClothesGuidId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SizeGuidId")
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.HasIndex("ClothesGuidId");

                    b.HasIndex("SizeGuidId");

                    b.ToTable("ClothesSizes");
                });

            modelBuilder.Entity("DVS.Domain.Models.Employee", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DVS.Domain.Models.EmployeeClothesSize", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClothesSizeGuidId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmployeeGuidId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("GuidId");

                    b.HasIndex("ClothesSizeGuidId");

                    b.HasIndex("EmployeeGuidId");

                    b.ToTable("EmployeeClothesSizes");
                });

            modelBuilder.Entity("DVS.Domain.Models.Season", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            GuidId = new Guid("85d1fd0c-4c3b-459f-afee-8d0cac26ae72"),
                            Name = "-Saisonlos-"
                        },
                        new
                        {
                            GuidId = new Guid("231b8532-c480-4000-93e5-614288a7899c"),
                            Name = "Sommer"
                        },
                        new
                        {
                            GuidId = new Guid("5eeb0438-36b8-46c5-8338-02c3704fe5b6"),
                            Name = "Winter"
                        });
                });

            modelBuilder.Entity("DVS.Domain.Models.SizeModel", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSizeSystemEU")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            GuidId = new Guid("0342e65f-021b-4dca-892e-dcb51657313d"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "44"
                        },
                        new
                        {
                            GuidId = new Guid("5e9d37a4-1a86-49dd-bf00-41d6b0e9eee0"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "46"
                        },
                        new
                        {
                            GuidId = new Guid("62413ba1-55ba-4696-8f98-70d440f36e9f"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "48"
                        },
                        new
                        {
                            GuidId = new Guid("5bcd8a4f-a6ac-4111-a183-37b1115e6dc2"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "50"
                        },
                        new
                        {
                            GuidId = new Guid("da13581c-8ca4-4ce5-a5a2-ca997f37a245"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "52"
                        },
                        new
                        {
                            GuidId = new Guid("717f2e3e-76c3-46fa-9037-6b92bc425376"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "54"
                        },
                        new
                        {
                            GuidId = new Guid("0182e323-596e-4483-868c-4319e77c57f7"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "56"
                        },
                        new
                        {
                            GuidId = new Guid("b0e06f57-1db5-44ad-b6d3-5c16a83355eb"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "58"
                        },
                        new
                        {
                            GuidId = new Guid("3a6d3378-1f73-48fc-adc6-183264693ecb"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "60"
                        },
                        new
                        {
                            GuidId = new Guid("8feb8759-40a7-447f-8f4e-8331536143cf"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "62"
                        },
                        new
                        {
                            GuidId = new Guid("fcd325b7-c211-4631-bdec-0d68bc8e4127"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "XS"
                        },
                        new
                        {
                            GuidId = new Guid("24c3623d-9504-463b-a4b0-43abbdfe1b5d"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "S"
                        },
                        new
                        {
                            GuidId = new Guid("4821e399-0f25-48e4-bf2e-56888311dbf3"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "M"
                        },
                        new
                        {
                            GuidId = new Guid("03c77177-1475-440c-8dc3-70aea07a1d01"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "L"
                        },
                        new
                        {
                            GuidId = new Guid("69e348ad-346e-448c-ad04-ce8718ff18e6"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "XL"
                        },
                        new
                        {
                            GuidId = new Guid("fae44f9e-d3f5-46b7-ab23-95bcf5b7de90"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "XLL"
                        },
                        new
                        {
                            GuidId = new Guid("40e40599-4c16-4054-8062-7d1449ea506d"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "3XL"
                        },
                        new
                        {
                            GuidId = new Guid("f1ae5bac-36e5-4242-a07f-a64069e67b15"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "4XL"
                        },
                        new
                        {
                            GuidId = new Guid("7e93df17-1cac-4ee5-a4b3-bac8b5b82a2f"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "5XL"
                        },
                        new
                        {
                            GuidId = new Guid("3bf7cabe-9cbb-47a8-92d8-6e35227da24e"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "6XL"
                        });
                });

            modelBuilder.Entity("DVS.Domain.Models.Clothes", b =>
                {
                    b.HasOne("DVS.Domain.Models.Category", "Category")
                        .WithMany("Clothes")
                        .HasForeignKey("CategoryGuidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DVS.Domain.Models.Season", "Season")
                        .WithMany("Clothes")
                        .HasForeignKey("SeasonGuidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("DVS.Domain.Models.ClothesSize", b =>
                {
                    b.HasOne("DVS.Domain.Models.Clothes", "Clothes")
                        .WithMany("Sizes")
                        .HasForeignKey("ClothesGuidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DVS.Domain.Models.SizeModel", "Size")
                        .WithMany("ClothesSizes")
                        .HasForeignKey("SizeGuidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clothes");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("DVS.Domain.Models.EmployeeClothesSize", b =>
                {
                    b.HasOne("DVS.Domain.Models.ClothesSize", "ClothesSize")
                        .WithMany("EmployeeClothesSizes")
                        .HasForeignKey("ClothesSizeGuidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DVS.Domain.Models.Employee", "Employee")
                        .WithMany("Clothes")
                        .HasForeignKey("EmployeeGuidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClothesSize");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DVS.Domain.Models.Category", b =>
                {
                    b.Navigation("Clothes");
                });

            modelBuilder.Entity("DVS.Domain.Models.Clothes", b =>
                {
                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("DVS.Domain.Models.ClothesSize", b =>
                {
                    b.Navigation("EmployeeClothesSizes");
                });

            modelBuilder.Entity("DVS.Domain.Models.Employee", b =>
                {
                    b.Navigation("Clothes");
                });

            modelBuilder.Entity("DVS.Domain.Models.Season", b =>
                {
                    b.Navigation("Clothes");
                });

            modelBuilder.Entity("DVS.Domain.Models.SizeModel", b =>
                {
                    b.Navigation("ClothesSizes");
                });
#pragma warning restore 612, 618
        }
    }
}
