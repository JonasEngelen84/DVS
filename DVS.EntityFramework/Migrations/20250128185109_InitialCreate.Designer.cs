// <auto-generated />
using System;
using DVS.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DVS.EntityFramework.Migrations
{
    [DbContext(typeof(DVSDbContext))]
    [Migration("20250128185109_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("DVS.Domain.Models.Category", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            GuidId = new Guid("13ad740a-00fa-43c5-889a-61474c1ab7a7"),
                            Name = "-Kategorielos-"
                        },
                        new
                        {
                            GuidId = new Guid("96f44275-15d5-4c18-a335-9a055f7f15a3"),
                            Name = "Handschuhe"
                        },
                        new
                        {
                            GuidId = new Guid("285cebcb-8d58-48da-b8c0-eaffe478effd"),
                            Name = "Hemd"
                        },
                        new
                        {
                            GuidId = new Guid("d5457969-277f-44b4-a43b-cf26f8cbe746"),
                            Name = "Hose"
                        },
                        new
                        {
                            GuidId = new Guid("4bebe0ee-85bb-45f1-adad-0c90f549d706"),
                            Name = "Jacke"
                        },
                        new
                        {
                            GuidId = new Guid("9cbb04af-92b3-4424-9f34-65cc0712698f"),
                            Name = "Kopfbedeckung"
                        },
                        new
                        {
                            GuidId = new Guid("61f0a783-1876-43a4-9613-a9e2dfcba6f4"),
                            Name = "Pullover"
                        },
                        new
                        {
                            GuidId = new Guid("a48e6843-1e98-4b33-b8b6-b85723131b7a"),
                            Name = "Schuhwerk"
                        },
                        new
                        {
                            GuidId = new Guid("bccd2c25-04d8-4ec9-a4f8-68ed2198f293"),
                            Name = "Shirt"
                        });
                });

            modelBuilder.Entity("DVS.Domain.Models.Clothes", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryGuidId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SeasonGuidId")
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.HasIndex("CategoryGuidId");

                    b.HasIndex("SeasonGuidId");

                    b.ToTable("Clothes");
                });

            modelBuilder.Entity("DVS.Domain.Models.ClothesSize", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClothesGuidId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SizeGuidId")
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.HasIndex("ClothesGuidId");

                    b.HasIndex("SizeGuidId");

                    b.ToTable("ClothesSizes");
                });

            modelBuilder.Entity("DVS.Domain.Models.Employee", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DVS.Domain.Models.EmployeeClothesSize", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClothesSizeGuidId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmployeeGuidId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("GuidId");

                    b.HasIndex("ClothesSizeGuidId");

                    b.HasIndex("EmployeeGuidId");

                    b.ToTable("EmployeeClothesSizes");
                });

            modelBuilder.Entity("DVS.Domain.Models.Season", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            GuidId = new Guid("f0522894-5f51-4039-a225-2b058f5b1e25"),
                            Name = "-Saisonlos-"
                        },
                        new
                        {
                            GuidId = new Guid("a9921aae-05b7-4cb8-b0fb-d535b3ae5d50"),
                            Name = "Sommer"
                        },
                        new
                        {
                            GuidId = new Guid("1205fee4-c6ab-451a-b5f2-25835e09f9f4"),
                            Name = "Winter"
                        });
                });

            modelBuilder.Entity("DVS.Domain.Models.SizeModel", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSizeSystemEU")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            GuidId = new Guid("e3a68ea4-84ef-41c8-8e89-a86a6ddae515"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "44"
                        },
                        new
                        {
                            GuidId = new Guid("21234ece-4195-4011-8ed5-7d4483ec4ace"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "46"
                        },
                        new
                        {
                            GuidId = new Guid("56cc8f2c-8e42-41d2-aa03-3988264c23d6"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "48"
                        },
                        new
                        {
                            GuidId = new Guid("d51f98f1-5ab3-474f-b046-0eb883dc3818"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "50"
                        },
                        new
                        {
                            GuidId = new Guid("d37b6043-e0a5-4e10-89d6-b5b0a0e25003"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "52"
                        },
                        new
                        {
                            GuidId = new Guid("8c475434-f68b-46d9-9856-8af40513c347"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "54"
                        },
                        new
                        {
                            GuidId = new Guid("99f1736b-7910-4d35-8004-5b552d1b600f"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "56"
                        },
                        new
                        {
                            GuidId = new Guid("8a0627a3-12fe-4e4d-842b-57b213ee876e"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "58"
                        },
                        new
                        {
                            GuidId = new Guid("0b0a4311-5ebc-48f9-b0e3-74196a512139"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "60"
                        },
                        new
                        {
                            GuidId = new Guid("da040fb8-f109-4215-979d-50d7175a7b66"),
                            IsSelected = false,
                            IsSizeSystemEU = true,
                            Quantity = 0,
                            Size = "62"
                        },
                        new
                        {
                            GuidId = new Guid("6296a05a-438f-427c-a5d8-7691630659d5"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "XS"
                        },
                        new
                        {
                            GuidId = new Guid("9408a725-c6fd-4c22-a5e6-ac9f9165ced1"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "S"
                        },
                        new
                        {
                            GuidId = new Guid("45f83913-0aa0-4cfd-9d11-5d39b156b3e7"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "M"
                        },
                        new
                        {
                            GuidId = new Guid("d1874201-a576-4eae-80fe-d253dd107eac"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "L"
                        },
                        new
                        {
                            GuidId = new Guid("ddcaa42c-279b-4810-873a-63cb4996aa5f"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "XL"
                        },
                        new
                        {
                            GuidId = new Guid("fff0d523-3669-473d-bd29-27e6b3c65acc"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "XLL"
                        },
                        new
                        {
                            GuidId = new Guid("7648ba10-f715-4cb6-9b61-327c847554bd"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "3XL"
                        },
                        new
                        {
                            GuidId = new Guid("c68838ef-9615-4348-bbc2-f3c00d8a8898"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "4XL"
                        },
                        new
                        {
                            GuidId = new Guid("d3c65435-3a74-4cc2-b717-0b73a9fc04f9"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "5XL"
                        },
                        new
                        {
                            GuidId = new Guid("b09710bf-43d5-4364-a9aa-6477f224a90d"),
                            IsSelected = false,
                            IsSizeSystemEU = false,
                            Quantity = 0,
                            Size = "6XL"
                        });
                });

            modelBuilder.Entity("DVS.Domain.Models.Clothes", b =>
                {
                    b.HasOne("DVS.Domain.Models.Category", "Category")
                        .WithMany("Clothes")
                        .HasForeignKey("CategoryGuidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DVS.Domain.Models.Season", "Season")
                        .WithMany("Clothes")
                        .HasForeignKey("SeasonGuidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("DVS.Domain.Models.ClothesSize", b =>
                {
                    b.HasOne("DVS.Domain.Models.Clothes", "Clothes")
                        .WithMany("Sizes")
                        .HasForeignKey("ClothesGuidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DVS.Domain.Models.SizeModel", "Size")
                        .WithMany("ClothesSizes")
                        .HasForeignKey("SizeGuidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clothes");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("DVS.Domain.Models.EmployeeClothesSize", b =>
                {
                    b.HasOne("DVS.Domain.Models.ClothesSize", "ClothesSize")
                        .WithMany("EmployeeClothesSizes")
                        .HasForeignKey("ClothesSizeGuidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DVS.Domain.Models.Employee", "Employee")
                        .WithMany("Clothes")
                        .HasForeignKey("EmployeeGuidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClothesSize");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DVS.Domain.Models.Category", b =>
                {
                    b.Navigation("Clothes");
                });

            modelBuilder.Entity("DVS.Domain.Models.Clothes", b =>
                {
                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("DVS.Domain.Models.ClothesSize", b =>
                {
                    b.Navigation("EmployeeClothesSizes");
                });

            modelBuilder.Entity("DVS.Domain.Models.Employee", b =>
                {
                    b.Navigation("Clothes");
                });

            modelBuilder.Entity("DVS.Domain.Models.Season", b =>
                {
                    b.Navigation("Clothes");
                });

            modelBuilder.Entity("DVS.Domain.Models.SizeModel", b =>
                {
                    b.Navigation("ClothesSizes");
                });
#pragma warning restore 612, 618
        }
    }
}
